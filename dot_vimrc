syntax enable
set number
set relativenumber
set shiftwidth=4
set softtabstop=4
set tabstop=4
set smarttab
set wildmenu
set autoread
set autowrite
set smartindent
set autoindent
set incsearch
set hlsearch
set ignorecase
set colorcolumn=80
set textwidth=80
set formatoptions+=tcroq
set splitbelow
set splitright
set hidden
set encoding=utf-8
set nobackup
set nowritebackup
set cmdheight=2
set signcolumn=yes
set shortmess+=c
set updatetime=300
" set cursorcolumn
" set cursorline
" highlight CursorColumn cterm=NONE ctermbg=darkgray guibg=darkgray
" highlight ColorColumn ctermbg=darkgrey guibg=darkgrey
" set clipboard=unnamedplus
" set ruler
filetype indent on
filetype plugin on

if (empty($TMUX) && getenv('TERM_PROGRAM') != 'Apple_Terminal')
	if (has("nvim"))
		let $NVIM_TUI_ENABLE_TRUE_COLOR=1
	endif
	if (has("termguicolors"))
		set termguicolors
	endif
endif

" map
let mapleader=" "

" 只需要按Ctrl-n取消查找后的高亮显示
" map <C-n> :nohl<cr>
nnoremap <Leader>s :w!<CR>
noremap <Leader>q :q<CR>
nnoremap <Leader>r :source %<CR>
nnoremap <leader>t :tabnew<CR>
map <C-j> <C-W>j
map <C-k> <C-W>k
map <C-h> <C-W>h
map <C-l> <C-W>l
nnoremap <leader>- :split<CR>
nnoremap <leader>\| :vsplit<CR>
" p switch buffer & x close buffer
nnoremap <Leader>p :bp<CR>
nnoremap <Leader>x :bd<CR>
nnoremap <Leader>f :Files<CR>
nnoremap <Leader>l :Lines<CR>
" add markdown codeblock, cursor need under a block
nnoremap <Leader>mc {O<DOWN>```<DOWN><ESC>}i```<ESC><DOWN>O<ESC>

" python format
command! FormatPythonRuff execute ':%!ruff format -'

" keybind gf gotoFile
source "~/.config/vim/open_file_under_cursor.vim"

call plug#begin()
Plug 'morhetz/gruvbox'
Plug 'christoomey/vim-tmux-navigator'
" smooth scroll
Plug 'psliwka/vim-smoothie'
" symbol surround
Plug 'tpope/vim-surround'

" fzf
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
let g:fzf_vim = {}
let g:fzf_vim.preview_window = ['right,50%', 'ctrl-/']
let g:fzf_layout = { 'tmux': '-p70%,60%' }

" nerdcommenter
" leader+cc & leader+cv
Plug 'preservim/nerdcommenter'
let g:NERDCreateDefaultMappings = 1
let g:NERDSpaceDelims = 1
let g:NERDCompactSexyComs = 1
let g:NERDDefaultAlign = 'left'
let g:NERDAltDelims_java = 1
let g:NERDCommentEmptyLines = 1
let g:NERDTrimTrailingWhitespace = 1

" AIRLINE THEME
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
let g:airline_theme='gruvbox'
let g:airline_powerline_fonts = 1
let g:airline_section_z = "%3p%% %l:%c"
let g:airline#extensions#branch#enabled = 1
let g:airline#extensions#tabline#enabled = 1

" On-demand loading: loaded when the specified command is executed
Plug 'preservim/nerdtree', { 'on': 'NERDTreeToggle' }
nnoremap <Leader>n :NERDTreeToggle<CR>
" Unmanaged plugin (manually installed and updated)
Plug '~/my-prototype-plugin'

Plug 'neoclide/coc.nvim', { 'branch': 'release' }
let g:coc_node_path='/usr/bin/node'


call plug#end()
" CocUninstall 删除插件
" CocList extensions  列出扩展
" Cocinstall 安装插件
" CocList marketplace
let g:coc_global_extensions = [
	\'coc-marketplace',
	\'coc-vimlsp',
	\'coc-clangd',
	\'coc-pyright',
	\'coc-word',
	\'coc-tsserver',
	\'coc-json',
	\'coc-html',
	\'coc-css',
	\'coc-go',
	\'coc-sumneko-lua',
	\'coc-sh',
	\'coc-db',
	\'coc-java',
	\'coc-toml',
	\'coc-solidity',
	\'coc-prettier',
	\'coc-snippets',
	\'coc-pairs',
	\'coc-translator',
	\'@yaegassy/coc-volar',
	\'coc-git']
" 显示最大补全
" set signcolumn=no " 取消左边报错提醒
" highlight CocErrorLine cterm=undercurl ctermfg=Red " 将错误提醒改为 红线
" coc.nvim config
" set pumheight=20
source "~/.vim/coc.vim"

autocmd vimenter * ++nested colorscheme gruvbox
set background=dark


