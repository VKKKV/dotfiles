" Make sure you use single quotes
syntax enable
set number
set relativenumber
set shiftwidth=4
set softtabstop=4
set smarttab
set tabstop=4
set ruler
set ignorecase
set wildmenu
set autoread
set autowrite
set smartindent
set autoindent
set incsearch
set hlsearch
set ignorecase
set cursorcolumn
set cursorline
" highlight CursorLine cterm=NONE ctermbg=235 guibg=235
highlight CursorColumn cterm=NONE ctermbg=darkgray guibg=darkgray
set colorcolumn=100
set textwidth=100
set formatoptions+=t
" change split position
set splitbelow
set splitright
highlight ColorColumn ctermbg=darkgrey guibg=darkgrey
filetype indent on
filetype plugin on


"Use 24-bit (true-color) mode in Vim/Neovim when outside tmux.
"If you're using tmux version 2.2 or later, you can remove the outermost $TMUX check and use tmux's 24-bit color support
"(see < http://sunaku.github.io/tmux-24bit-color.html#usage > for more information.)
if (empty($TMUX) && getenv('TERM_PROGRAM') != 'Apple_Terminal')
  if (has("nvim"))
    "For Neovim 0.1.3 and 0.1.4 < https://github.com/neovim/neovim/pull/2198 >
    let $NVIM_TUI_ENABLE_TRUE_COLOR=1
  endif
  "For Neovim > 0.1.5 and Vim > patch 7.4.1799 < https://github.com/vim/vim/commit/61be73bb0f965a895bfb064ea3e55476ac175162 >
  "Based on Vim patch 7.4.1770 (`guicolors` option) < https://github.com/vim/vim/commit/8a633e3427b47286869aa4b96f2bfc1fe65b25cd >
  " < https://github.com/neovim/neovim/wiki/Following-HEAD#20160511 >
  if (has("termguicolors"))
    set termguicolors
  endif
endif

" map
let mapleader=" "
nnoremap <Leader>w :w!<CR>
nnoremap <Leader>q :q<CR>
nnoremap <leader>` :terminal<CR>
nnoremap <leader>s :source %<CR>
nnoremap <leader>tt :tabnew<CR>
nnoremap <leader>tx :tabclose<CR>
map <C-j> <C-W>j
map <C-k> <C-W>k
map <C-h> <C-W>h
map <C-l> <C-W>l
nnoremap <leader>- :split<CR>
nnoremap <leader>\| :vsplit<CR>
" p switch buffer
" x close buffer
nnoremap <Leader>p :bp<CR>
nnoremap <Leader>x :bd<CR>
" keybind gf gotoFile
source ~/.config/vim/open_file_under_cursor.vim

call plug#begin()
Plug 'morhetz/gruvbox'

" about git
Plug 'airblade/vim-gitgutter'
Plug 'tpope/vim-fugitive'

" smooth scroll
Plug 'psliwka/vim-smoothie'

" symbol surround
Plug 'tpope/vim-surround'

" fzf
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
" Initialize configuration dictionary
let g:fzf_vim = {}
" let g:fzf_vim.preview_window = ['right,50%', 'ctrl-/']
let g:fzf_layout = { 'tmux': '-p70%,60%' }

" nerdcommenter
" leader+cc & leader+cv
Plug 'preservim/nerdcommenter'
" 创建默认映射
let g:NERDCreateDefaultMappings = 1
" 默认在注释分隔符后添加空格
let g:NERDSpaceDelims = 1
" 使用紧凑语法格式化多行注释
let g:NERDCompactSexyComs = 1
" 将行注释分隔符左对齐，而不是跟随代码缩进
let g:NERDDefaultAlign = 'left'
" 设置语言默认使用其备用分隔符
let g:NERDAltDelims_java = 1
" 允许注释和反转空行（在注释区域时很有用）
let g:NERDCommentEmptyLines = 1
let g:NERDTrimTrailingWhitespace = 1

" AIRLINE THEME
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
let g:airline_theme='gruvbox'
" let g:airline_theme='molokai'
let g:airline_powerline_fonts = 1
let g:airline#extensions#branch#enabled=1
let g:airline#extensions#hunks#enabled=0
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#fnamemod = ':t'
" let g:airline_section_z = "%3p%% %l:%c"

" coc
Plug 'neoclide/coc.nvim', { 'branch': 'release' }
let g:coc_node_path='/usr/bin/node'
" if hidden is not set, TextEdit might fail.
set hidden
" Some servers have issues with backup files, see #649
set nobackup
set nowritebackup
" Better display for messages
set cmdheight=2
" You will have bad experience for diagnostic messages when it's default 4000.
set updatetime=300
" don't give |ins-completion-menu| messages.
set shortmess+=c
" always show signcolumns
set signcolumn=yes

" On-demand loading: loaded when the specified command is executed
Plug 'preservim/nerdtree', { 'on': 'NERDTreeToggle' }
nnoremap <Leader>n :NERDTreeToggle<CR>

Plug 'ryanoasis/vim-devicons'

" Unmanaged plugin (manually installed and updated)
Plug '~/my-prototype-plugin'
call plug#end()

autocmd vimenter * ++nested colorscheme gruvbox
set bg=dark
